{"ast":null,"code":"var _jsxFileName = \"/Users/jagodicmiroslav/MyDocuments/Documents/TestProjects/vacation-rentals-react/src/components/RentalList/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions';\nimport RentalPlace from '../RentalPlace';\nimport { ListWrapper, SpinnerWrapper } from './style';\nimport { MetroSpinner } from \"react-spinners-kit\";\nexport class PersonList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.props.onInitApartments();\n  }\n\n  render() {\n    console.log('INIT: ', this.props.initData);\n    const loading = this.state.loading;\n\n    const getAllApartments = initData => {\n      const allContent = [];\n\n      if (initData) {\n        this.props.initData.map(place => place.apartmentSimples.map(item => allContent.push(item)));\n      }\n\n      return allContent;\n    };\n\n    const content = this.props.initData ? getAllApartments(this.props.initData).map(place => React.createElement(RentalPlace, {\n      key: place.apartmentId,\n      id: place.apartmentId,\n      title: place.holiduShortTitle,\n      minDayPrice: place.minDayPrice,\n      teaser: place.teaser,\n      rating: place.rating,\n      provider: place.provider,\n      photos: place.photos,\n      photoDirectory: place.providerPhotoDirectory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })) : React.createElement(SpinnerWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(MetroSpinner, {\n      size: 50,\n      color: \"#0c6eef\",\n      loading: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n    return React.createElement(ListWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, content);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    initData: state.apartments\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onInitApartments: () => dispatch(actions.getApartmentsData())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonList);","map":{"version":3,"sources":["/Users/jagodicmiroslav/MyDocuments/Documents/TestProjects/vacation-rentals-react/src/components/RentalList/index.js"],"names":["React","Component","connect","actions","RentalPlace","ListWrapper","SpinnerWrapper","MetroSpinner","PersonList","state","loading","componentDidMount","props","onInitApartments","render","console","log","initData","getAllApartments","allContent","map","place","apartmentSimples","item","push","content","apartmentId","holiduShortTitle","minDayPrice","teaser","rating","provider","photos","providerPhotoDirectory","mapStateToProps","apartments","mapDispatchToProps","dispatch","getApartmentsData"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAAQC,WAAR,EAAqBC,cAArB,QAA0C,SAA1C;AACA,SAASC,YAAT,QAA6B,oBAA7B;AAEA,OAAO,MAAMC,UAAN,SAAyBP,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACxCQ,KADwC,GAChC;AACNC,MAAAA,OAAO,EAAE;AADH,KADgC;AAAA;;AAKxCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,gBAAX;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKJ,KAAL,CAAWK,QAAjC;AADO,UAECP,OAFD,GAEa,KAAKD,KAFlB,CAECC,OAFD;;AAGP,UAAMQ,gBAAgB,GAAID,QAAD,IAAc;AACrC,YAAME,UAAU,GAAG,EAAnB;;AACA,UAAIF,QAAJ,EAAc;AACZ,aAAKL,KAAL,CAAWK,QAAX,CAAoBG,GAApB,CAAwBC,KAAK,IAC3BA,KAAK,CAACC,gBAAN,CAAuBF,GAAvB,CAA2BG,IAAI,IAC7BJ,UAAU,CAACK,IAAX,CAAgBD,IAAhB,CADF,CADF;AAGD;;AAAC,aAAOJ,UAAP;AACL,KAPC;;AAQA,UAAMM,OAAO,GAAG,KAAKb,KAAL,CAAWK,QAAX,GAChBC,gBAAgB,CAAC,KAAKN,KAAL,CAAWK,QAAZ,CAAhB,CAAsCG,GAAtC,CAA0CC,KAAK,IAC7C,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,KAAK,CAACK,WAAxB;AACE,MAAA,EAAE,EAAIL,KAAK,CAACK,WADd;AAEE,MAAA,KAAK,EAAIL,KAAK,CAACM,gBAFjB;AAGE,MAAA,WAAW,EAAIN,KAAK,CAACO,WAHvB;AAIE,MAAA,MAAM,EAAIP,KAAK,CAACQ,MAJlB;AAKE,MAAA,MAAM,EAAIR,KAAK,CAACS,MALlB;AAME,MAAA,QAAQ,EAAIT,KAAK,CAACU,QANpB;AAOE,MAAA,MAAM,EAAIV,KAAK,CAACW,MAPlB;AAQE,MAAA,cAAc,EAAIX,KAAK,CAACY,sBAR1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADgB,GAahB,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AACA,MAAA,IAAI,EAAE,EADN;AAEA,MAAA,KAAK,EAAC,SAFN;AAGA,MAAA,OAAO,EAAEvB,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAbA;AAoBA,WACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGe,OADH,CADF;AAKD;;AA7CuC;;AAgD1C,MAAMS,eAAe,GAAGzB,KAAK,IAAI;AAC7B,SAAO;AACHQ,IAAAA,QAAQ,EAAER,KAAK,CAAC0B;AADb,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHxB,IAAAA,gBAAgB,EAAE,MAAMwB,QAAQ,CAAClC,OAAO,CAACmC,iBAAR,EAAD;AAD7B,GAAP;AAGH,CAJD;;AAMA,eAAepC,OAAO,CAACgC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C5B,UAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions';\nimport RentalPlace from '../RentalPlace'\nimport {ListWrapper, SpinnerWrapper} from './style'\nimport { MetroSpinner } from \"react-spinners-kit\";\n\nexport class PersonList extends Component {\n  state = {\n    loading: true\n  }\n\n  componentDidMount() { \n      this.props.onInitApartments();\n  }\n\n  render() {\n    console.log('INIT: ', this.props.initData)\n    const { loading } = this.state;\n    const getAllApartments = (initData) => {\n      const allContent = []\n      if (initData) {\n        this.props.initData.map(place =>  \n          place.apartmentSimples.map(item => \n            allContent.push(item)))\n      } return allContent\n  }\n    const content = this.props.initData ? \n    getAllApartments(this.props.initData).map(place => \n      <RentalPlace key={place.apartmentId}\n        id = {place.apartmentId}\n        title = {place.holiduShortTitle}\n        minDayPrice = {place.minDayPrice}\n        teaser = {place.teaser}\n        rating = {place.rating}\n        provider = {place.provider}\n        photos = {place.photos}\n        photoDirectory = {place.providerPhotoDirectory}\n      /> \n    ) : \n    <SpinnerWrapper>\n      <MetroSpinner\n      size={50}\n      color=\"#0c6eef\"\n      loading={loading}/>\n    </SpinnerWrapper>\n\n    return (\n      <ListWrapper>\n        {content}\n      </ListWrapper>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n        initData: state.apartments\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onInitApartments: () => dispatch(actions.getApartmentsData())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonList);\n"]},"metadata":{},"sourceType":"module"}