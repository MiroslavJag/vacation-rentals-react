{"version":3,"sources":["static/images/no_image.png","store/actions/actionTypes.js","store/actions/actions.js","components/RentalPlace/style.js","components/ImageGallery/index.js","components/RentalPlace/index.js","components/RentalList/style.js","components/RentalList/index.js","components/Layout/Header/style.js","components/Layout/Header/index.js","components/Layout/Footer/style.js","components/Layout/Footer/index.js","components/Layout/index.js","App.js","serviceWorker.js","store/reducers/reducer.js","store/sagas/apartments.js","store/sagas/index.js","index.js"],"names":["module","exports","INIT_APARTMENTS_DATA","setApartmentsData","value","type","apartments","setErorr","PlaceWrapper","styled","div","PlaceDetails","RatingWrapper","ProviderSection","ProviderWrapper","OfferBtn","button","ImageGallery","state","imageExist","galleryPhotos","this","props","photos","slice","gallery","length","map","image","src","imageURL","alt","key","id","height","onError","setState","staticImage","Component","RentalPlace","content","STATIC_URL_IMAGES","photoDirectory","ratingValue","rating","toFixed","starRatedColor","starDimension","starSpacing","countOfFeedbacks","teaser","replace","title","substr","providerConfiguration","logoUrl","ListWrapper","SpinnerWrapper","RentalList","onInitApartments","initData","allContent","place","apartmentSimples","item","push","getAllApartments","apartmentId","holiduShortTitle","minDayPrice","provider","providerPhotoDirectory","size","color","loading","connect","dispatch","actionTypes","HeaderWrapper","Header","FooterWrapper","Footer","Layout","children","App","className","Boolean","window","location","hostname","match","initialState","error","reducer","action","initApartmentsSaga","axios","get","API_URL","response","put","actions","data","watchApartments","takeEvery","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b7c19e35.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no_image.3dda7ba3.png\";","export const SET_APARTMENTS_DATA = 'SET_APARTMENTS_DATA';\nexport const INIT_APARTMENTS_DATA = 'INIT_APARTMENTS_DATA';\nexport const SET_ERROR = 'SET_ERROR';","import * as actionTypes from './actionTypes';\n\nexport const getApartmentsData = () => {\n  return {\n      type: actionTypes.INIT_APARTMENTS_DATA\n  };\n}\n\nexport const setApartmentsData = (value) => {\n  return {\n      type: actionTypes.SET_APARTMENTS_DATA,\n      apartments: value\n  };\n};\n\nexport const setErorr = ( ) => {\n  return {\n      type: actionTypes.SET_ERROR\n  };\n};\n\n\n","import styled from 'styled-components';\n\nexport const PlaceWrapper = styled.div`\n width: 95%;\n display: flex;\n flex-direction: column;\n margin: 1rem;\n box-shadow: 0 0 0.5rem rgba(0,0,0,.2);\n\n @media only screen and (min-width: 700px) {\n   width: 45%;\n }\n @media only screen and (min-width: 1040px) {\n   width: 30%;\n }\n`\n\nexport const PlaceDetails = styled.div`\n flex-direction: column;\n padding: 10px;\n height: 150px;\n margin-bottom: 10px;\n`\n\nexport const RatingWrapper = styled.div`\n display: flex;\n flex-direction: row;\n\n p {\n  margin: 0;\n  font-size: 15px;\n  margin-top: 1px;\n }\n p:first-child {\n  color: #0c6eef;\n  font-weight: bold;\n }\n p:nth-child(3) {\n  color: grey;\n }\n .star-ratings {\n  margin: 0 5px;\n }\n`\nexport const ProviderSection = styled.div`\n display: flex;\n justify-content: space-between;\n flex-direction: column;\n height: 70px;\n}\n`\n\nexport const ProviderWrapper = styled.div`\n display: flex;\n justify-content: space-between;\n flex-direction: row;\n align-items: flex-end;\n height: 100%;\n border-top: 1px solid lightgrey;\n padding: 10px;\n`\n\nexport const OfferBtn = styled.button`\n padding: 13px;\n background-color: #0c6eef;;\n color: white;\n font-size: 17px;\n font-weight: bold;\n border-radius: 5px;\n`","import React,{Component} from 'react';\nimport Carousel from 'nuka-carousel';\nimport staticImage from '../../static/images/no_image.png'\n\nexport class ImageGallery extends Component {\n  state = {\n    imageExist: true\n  }\n\n render () {\n  //Limit number of photos inside the gallery to be 5 \n  const galleryPhotos = [...this.props.photos.slice(0,5)]\n  const gallery = this.props.photos.length !== 0 ? //If the apartment does not have photos show default image (staticIamge)\n   galleryPhotos.map(image => this.state.imageExist ? //Check if photo can be loaded from URL\n    <img \n     src={`${this.props.imageURL}${image}.jpg`} \n     alt=\"original\" \n     key={this.props.id}\n     height=\"230\"\n     //error loading photo from URL\n     onError={() => this.setState({imageExist: false})}\n    /> : null\n   ) : \n    <img src={`${staticImage}`} \n     alt=\"default\" \n     key={this.props.id} \n     height=\"230\" /> \n\n  return (\n    <Carousel>\n    {/* If photo can not be loaded from URL show static image */}\n    {this.state.imageExist ? gallery : \n      <img src={`${staticImage}`} \n      alt=\"default\" \n      key={this.props.id} \n      height=\"230\"\n      /> }\n    </Carousel>\n  )\n }\n}\n\nexport default ImageGallery\n","import React from 'react';\nimport {PlaceWrapper, PlaceDetails, RatingWrapper, ProviderSection, ProviderWrapper, OfferBtn} from './style'\nimport ImageGallery from '../ImageGallery'\nimport {STATIC_URL_IMAGES} from '../../consts'\nimport StarRatings from 'react-star-ratings';\n\nconst RentalPlace = (props) => {\n //Create URL for loading images \n const imageURL=`${STATIC_URL_IMAGES}${props.photoDirectory}/${props.id}/t/`\n\n //Reduce title length after 40 characters adding three dots\n const reducePlaceTiteLength = content => {\n  return content.length > 40\n    ? `${content.substr(0, 37)}...`\n    : content\n  }\n  //Calculate place rating based on precentage \n  const ratingValue = (props.rating / 100 * 50) /10\n  //Show rating section if it is available\n  const rating = props.rating !== 0 ?\n   <RatingWrapper>\n    <p>{ratingValue.toFixed(1)}</p> \n    <StarRatings\n      rating={ratingValue}\n      starRatedColor=\"#0c6eef\"\n      starDimension=\"15px\"\n      starSpacing=\"0\" />\n    <p>{`${props.countOfFeedbacks}${props.countOfFeedbacks === 1 ? ' review' : ' reviews'}`}</p>\n    </RatingWrapper> : null\n\n    //Replace m2 html symbol with a string inside the teaser\n    const teaser = props.teaser.replace('m&sup2;', 'm2')\n\n return (\n  <PlaceWrapper>\n   <ImageGallery \n    photos={props.photos}\n    imageURL={imageURL} \n    id={props.id}/>\n    <PlaceDetails>\n     <h3>{reducePlaceTiteLength(props.title)}</h3>\n     <p>{teaser}</p>\n     {rating}\n    </PlaceDetails>\n    <ProviderSection>\n      <ProviderWrapper>\n       <img src={props.providerConfiguration.logoUrl} alt=\"prviderLogo\" height=\"15px\" />\n       <OfferBtn>View Offer</OfferBtn>\n      </ProviderWrapper>\n     </ProviderSection>\n  </PlaceWrapper>\n )\n}\n\nexport default RentalPlace\n","import styled from 'styled-components';\n\nexport const ListWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  max-width: 75rem;\n  width: 100%;\n  margin: 0 auto; \n  padding-top: 90px;\n`\nexport const SpinnerWrapper = styled.div`\n  justify-content: center;\n  padding-top: 50px;\n  display: flex;\n  flex: 1;\n  justify-content: center;\n`","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions';\nimport RentalPlace from '../RentalPlace'\nimport {ListWrapper, SpinnerWrapper} from './style'\nimport { MetroSpinner } from \"react-spinners-kit\";\n\nexport class RentalList extends Component {\n\n  componentDidMount() { \n    //Get initial data from Redux\n    this.props.onInitApartments();\n  }\n\n  render() {\n    //Get all aprtment simples from all apartments in one array\n    const getAllApartments = (initData) => {  \n      const allContent = []\n      if (initData) {\n        this.props.initData.map(place =>  \n          place.apartmentSimples.map(item => \n            allContent.push(item)))\n      } return allContent\n    }\n    //If apartment exist get all desired properties, until that show the Spinner\n    const content = this.props.initData ? \n      getAllApartments(this.props.initData).map(place => \n        <RentalPlace key={place.apartmentId}\n          id = {place.apartmentId}\n          title = {place.holiduShortTitle}\n          minDayPrice = {place.minDayPrice}\n          teaser = {place.teaser}\n          rating = {place.rating}\n          provider = {place.provider}\n          photos = {place.photos}\n          photoDirectory = {place.providerPhotoDirectory}\n          countOfFeedbacks = {place.countOfFeedbacks}\n          providerConfiguration = {place.providerConfiguration}\n        /> \n      ) : \n      <SpinnerWrapper>\n        <MetroSpinner\n        size={50}\n        color=\"#0c6eef\"\n        loading={true}/>\n      </SpinnerWrapper>\n\n    return (\n      <ListWrapper>\n        {content}\n      </ListWrapper>\n    )\n  }\n}\n\n//Get state from the redux\nconst mapStateToProps = state => {\n    return {\n        initData: state.apartments\n    };\n}\n\n//Dispatch the action for initial data\nconst mapDispatchToProps = dispatch => {\n    return {\n        onInitApartments: () => dispatch(actions.getApartmentsData())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RentalList);\n","import styled from 'styled-components';\n\nexport const HeaderWrapper = styled.div`\n  height: 70px;\n -webkit-box-shadow: 0 3px 5px rgba(57, 63, 72, 0.3);\n -moz-box-shadow: 0 3px 5px rgba(57, 63, 72, 0.3);\n box-shadow: 0 3px 5px rgba(57, 63, 72, 0.3);\n position: fixed;\n width: 100%;\n background-color: white;\n text-align: center;\n z-index: 1;\n\n h2, p {\n  margin: 0;\n }\n\n h2 {\n  padding-top: 7px;\n  color: #0c6eef;\n }\n}\n\n`","import React from 'react';\nimport {HeaderWrapper} from './style'\n\nconst Header = () => (\n   <HeaderWrapper>\n    <h2>Holidu</h2>\n    <p>React Frontend Task</p> \n   </HeaderWrapper>\n  )\n\nexport default Header\n","import styled from 'styled-components';\n\nexport const FooterWrapper = styled.div`\n border-top: solid 1px lightgray;\n text-align: center;\n margin-top: 50px;\n`","import React from 'react';\nimport {FooterWrapper} from './style'\n\nconst Footer = () => (\n <FooterWrapper>\n     <p>&copy; 2019 Holidu &#183; Trial task </p>\n </FooterWrapper>\n)\n\nexport default Footer\n","import React from 'react';\nimport Header from './Header'\nimport Footer from './Footer'\n\nconst Layout = (props) => (\n <>\n  <Header />\n    {props.children}\n  <Footer />\n </>\n)\n\nexport default Layout\n","import React from 'react';\nimport './App.css';\nimport RentalList from './components/RentalList'\nimport Layout from './components/Layout'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout>\n        <RentalList />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nexport const initialState = {\n  apartments: null,\n  error: false\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch(action.type){\n      case actionTypes.SET_APARTMENTS_DATA:\n        return {\n          ...state,\n          apartments: action.apartments.apartments,\n          error: false\n        }\n      default:\n        return state;\n    }\n}\n\nexport default reducer;\n","import { put } from \"redux-saga/effects\";\nimport axios from 'axios';\nimport * as actions from '../actions';\nimport {API_URL} from '../../consts'\n\nexport function* initApartmentsSaga(action) {\n  try {\n    const response = yield axios.get(API_URL);\n    yield put(actions.setApartmentsData(response.data));\n  } catch (error) {\n    yield put(actions.setErorr());\n  }\n}\n","import { takeEvery } from \"redux-saga/effects\";\nimport * as actionTypes from \"../actions/actionTypes\";\nimport { initApartmentsSaga } from \"./apartments\";\n\nexport function* watchApartments() {\n  yield takeEvery(actionTypes.INIT_APARTMENTS_DATA, initApartmentsSaga);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducer from '../src/store/reducers/reducer';\nimport createSagaMiddleware from \"redux-saga\";\nimport {watchApartments} from './store/sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(reducer,applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(watchApartments);\n\nconst app = (\n  <Provider store={store}>\n      <App />\n  </Provider>\n);\n\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}