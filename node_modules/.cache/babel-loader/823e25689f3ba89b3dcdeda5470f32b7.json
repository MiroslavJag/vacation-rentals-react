{"ast":null,"code":"var _jsxFileName = \"/Users/jagodicmiroslav/MyDocuments/Documents/TestProjects/holidu-vacation-rental-task/vacation-rentals-react/src/components/RentalList/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions';\nimport RentalPlace from '../RentalPlace';\nimport { ListWrapper, SpinnerWrapper } from './style';\nimport { MetroSpinner } from \"react-spinners-kit\";\nexport class RentalList extends Component {\n  componentDidMount() {\n    //Get initial data from Redux\n    this.props.onInitApartments();\n  }\n\n  render() {\n    //Get all aprtment simples from all apartments in one array\n    const getAllApartments = initData => {\n      const allContent = [];\n\n      if (initData) {\n        this.props.initData.map(place => place.apartmentSimples.map(item => allContent.push(item)));\n      }\n\n      return allContent;\n    }; //If apartment exist get all desired properties, until that show the Spinner\n\n\n    const content = this.props.initData ? getAllApartments(this.props.initData).map(place => React.createElement(RentalPlace, {\n      key: place.apartmentId,\n      id: place.apartmentId,\n      title: place.holiduShortTitle,\n      minDayPrice: place.minDayPrice,\n      teaser: place.teaser,\n      rating: place.rating,\n      provider: place.provider,\n      photos: place.photos,\n      photoDirectory: place.providerPhotoDirectory,\n      countOfFeedbacks: place.countOfFeedbacks,\n      providerLogoUrl: place.providerConfiguration.logoUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })) : React.createElement(SpinnerWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(MetroSpinner, {\n      size: 50,\n      color: \"#0c6eef\",\n      loading: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n    return React.createElement(ListWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, content);\n  }\n\n} //Get state from the redux\n\nconst mapStateToProps = state => {\n  return {\n    initData: state.apartments\n  };\n}; //Dispatch the action for initial data\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onInitApartments: () => dispatch(actions.getApartmentsData())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RentalList);","map":{"version":3,"sources":["/Users/jagodicmiroslav/MyDocuments/Documents/TestProjects/holidu-vacation-rental-task/vacation-rentals-react/src/components/RentalList/index.js"],"names":["React","Component","connect","actions","RentalPlace","ListWrapper","SpinnerWrapper","MetroSpinner","RentalList","componentDidMount","props","onInitApartments","render","getAllApartments","initData","allContent","map","place","apartmentSimples","item","push","content","apartmentId","holiduShortTitle","minDayPrice","teaser","rating","provider","photos","providerPhotoDirectory","countOfFeedbacks","providerConfiguration","logoUrl","mapStateToProps","state","apartments","mapDispatchToProps","dispatch","getApartmentsData"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAAQC,WAAR,EAAqBC,cAArB,QAA0C,SAA1C;AACA,SAASC,YAAT,QAA6B,oBAA7B;AAMA,OAAO,MAAMC,UAAN,SAAyBP,SAAzB,CAA0C;AAE/CQ,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKC,KAAL,CAAWC,gBAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP;AACA,UAAMC,gBAAgB,GAAIC,QAAD,IAAc;AACrC,YAAMC,UAAU,GAAG,EAAnB;;AACA,UAAID,QAAJ,EAAc;AACZ,aAAKJ,KAAL,CAAWI,QAAX,CAAoBE,GAApB,CAAwBC,KAAK,IAC3BA,KAAK,CAACC,gBAAN,CAAuBF,GAAvB,CAA2BG,IAAI,IAC7BJ,UAAU,CAACK,IAAX,CAAgBD,IAAhB,CADF,CADF;AAGD;;AAAC,aAAOJ,UAAP;AACH,KAPD,CAFO,CAUP;;;AACA,UAAMM,OAAO,GAAG,KAAKX,KAAL,CAAWI,QAAX,GACdD,gBAAgB,CAAC,KAAKH,KAAL,CAAWI,QAAZ,CAAhB,CAAsCE,GAAtC,CAA0CC,KAAK,IAC7C,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,KAAK,CAACK,WAAxB;AACE,MAAA,EAAE,EAAIL,KAAK,CAACK,WADd;AAEE,MAAA,KAAK,EAAIL,KAAK,CAACM,gBAFjB;AAGE,MAAA,WAAW,EAAIN,KAAK,CAACO,WAHvB;AAIE,MAAA,MAAM,EAAIP,KAAK,CAACQ,MAJlB;AAKE,MAAA,MAAM,EAAIR,KAAK,CAACS,MALlB;AAME,MAAA,QAAQ,EAAIT,KAAK,CAACU,QANpB;AAOE,MAAA,MAAM,EAAIV,KAAK,CAACW,MAPlB;AAQE,MAAA,cAAc,EAAIX,KAAK,CAACY,sBAR1B;AASE,MAAA,gBAAgB,EAAIZ,KAAK,CAACa,gBAT5B;AAUE,MAAA,eAAe,EAAIb,KAAK,CAACc,qBAAN,CAA4BC,OAVjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADc,GAed,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AACA,MAAA,IAAI,EAAE,EADN;AAEA,MAAA,KAAK,EAAC,SAFN;AAGA,MAAA,OAAO,EAAE,IAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAfF;AAsBA,WACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGX,OADH,CADF;AAKD;;AA7C8C,C,CAgDjD;;AACA,MAAMY,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHpB,IAAAA,QAAQ,EAAEoB,KAAK,CAACC;AADb,GAAP;AAGH,CAJD,C,CAMA;;;AACA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACH1B,IAAAA,gBAAgB,EAAE,MAAM0B,QAAQ,CAAClC,OAAO,CAACmC,iBAAR,EAAD;AAD7B,GAAP;AAGH,CAJD;;AAMA,eAAepC,OAAO,CAAC+B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C5B,UAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions';\nimport RentalPlace from '../RentalPlace'\nimport {ListWrapper, SpinnerWrapper} from './style'\nimport { MetroSpinner } from \"react-spinners-kit\";\n\ntype Props = {\n  initData: Object\n}\n\nexport class RentalList extends Component<Props> {\n\n  componentDidMount() { \n    //Get initial data from Redux\n    this.props.onInitApartments();\n  }\n\n  render() {\n    //Get all aprtment simples from all apartments in one array\n    const getAllApartments = (initData) => {  \n      const allContent = []\n      if (initData) {\n        this.props.initData.map(place =>  \n          place.apartmentSimples.map(item => \n            allContent.push(item)))\n      } return allContent\n    }\n    //If apartment exist get all desired properties, until that show the Spinner\n    const content = this.props.initData ? \n      getAllApartments(this.props.initData).map(place => \n        <RentalPlace key={place.apartmentId}\n          id = {place.apartmentId}\n          title = {place.holiduShortTitle}\n          minDayPrice = {place.minDayPrice}\n          teaser = {place.teaser}\n          rating = {place.rating}\n          provider = {place.provider}\n          photos = {place.photos}\n          photoDirectory = {place.providerPhotoDirectory}\n          countOfFeedbacks = {place.countOfFeedbacks}\n          providerLogoUrl = {place.providerConfiguration.logoUrl}\n        /> \n      ) : \n      <SpinnerWrapper>\n        <MetroSpinner\n        size={50}\n        color=\"#0c6eef\"\n        loading={true}/>\n      </SpinnerWrapper>\n\n    return (\n      <ListWrapper>\n        {content}\n      </ListWrapper>\n    )\n  }\n}\n\n//Get state from the redux\nconst mapStateToProps = state => {\n    return {\n        initData: state.apartments\n    };\n}\n\n//Dispatch the action for initial data\nconst mapDispatchToProps = dispatch => {\n    return {\n        onInitApartments: () => dispatch(actions.getApartmentsData())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RentalList);\n"]},"metadata":{},"sourceType":"module"}